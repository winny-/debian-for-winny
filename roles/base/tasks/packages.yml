---
- name: Ensure amd64 multiarch
  lineinfile: dest=/var/lib/dpkg/arch line="amd64" create=yes
- name: Ensure i385 multiarch
  lineinfile: dest=/var/lib/dpkg/arch line="i386" create=yes
  register: add_i386
- name: disable /etc/apt/sources.list
  copy:
    dest: /etc/apt/sources.list
    content: |
      # This file is managed by Ansible!
      #
      # See files in /etc/apt/sources.list.d
  register: disabled_top_sources_list
- name: enable non-free and contrib packages
  copy:
    content: |
      # This file is managed by Ansible!
      Types: deb deb-src
      URIs: http://deb.debian.org/debian/
      Suites: trixie bookworm bookworm-updates sid
      Components: main contrib non-free non-free-firmware
    dest: /etc/apt/sources.list.d/debian.sources
  register: deb_repo
# https://wiki.debian.org/HowToGetABacktrace
- name: enable debug repo
  copy:
    content: |
      # This file is managed by Ansible!
      Types: deb deb-src
      URIs: http://deb.debian.org/debian-debug/
      Suites: trixie-debug bookworm-debug sid-debug
      Components: main contrib non-free non-free-firmware
    dest: /etc/apt/sources.list.d/debug.sources
  register: debug_repo
- name: 'Prioritize packages in descending order: trixie, bookworm, sid'
  copy:
    dest: /etc/apt/preferences.d/package-priorities
    content: |
      # This file is managed by Ansible!
      Package: *
      Pin: Release n=trixie
      Pin-Priority: 580

      Package: *
      Pin: Release n=trixie-debug
      Pin-Priority: 580

      Package: *
      Pin: release n=bookworm
      Pin-Priority: 550

      Package: *
      Pin: release n=bookworm-updates
      Pin-Priority: 550

      Package: *
      Pin: release n=bookworm-debug
      Pin-Priority: 550

      Package: *
      Pin: release n=sid
      Pin-Priority: 520

      Package: *
      Pin: release n=sid-debug
      Pin-Priority: 520

- name: checking time of last repository refresh
  stat:
    path: /var/cache/apt/pkgcache.bin
  register: pkgcache
- name: registering last repository refresh fact
  set_fact:
    last_repository_refresh: pkgcache.mtime
    current_epoch: ansible_date_time.epoch
- name: refresh repos if needed
  when: >-
    disabled_top_sources_list.changed or
    deb_repo.changed or
    debug_repo.changed or
    (last_repository_refresh|int < (current_epoch|int + 84000))
  apt:
    update_cache: yes
- name: install standard software
  apt:
    pkg: "{{ base_packages }}"
- name: Check for zfs
  command: which zfs
  check_mode: false
  changed_when: false
  failed_when: which_zfs_res.rc > 1
  register: which_zfs_res
- name: install zfs
  apt:
    pkg: zfs-initramfs
  when: "zfs or which_zfs_res.rc == 0"
- name: Populate service facts
  service_facts:
- name: Disable glances service if it exists
  service:
    name: glances
    enabled: false
    state: stopped
  when: "'glances' in ansible_facts.services"

- name: install command-not-found
  apt:
    pkg: command-not-found
  register: command_not_found
- name: run apt-file update
  when: command_not_found.changed
  command: apt-file update
